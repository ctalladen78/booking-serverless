Parameters:
  userPoolName:
    Default: FlyOnlineUserPool
    Type: String
  clientName:
    Default: FlyOnlineClient
    Type: String
  identityPoolName:
    Default: FlyOnlineIdentityPool
    Type: String

Resources:
  FlyOnlineUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AutoVerifiedAttributes:
        - email
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      UserPoolName:
        Ref: userPoolName
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
        - AttributeDataType: String
          Name: phone_number
          Required: true
      UsernameAttributes:
        - email

  FlyOnlinePoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName:
        Ref: clientName
      GenerateSecret: false
      UserPoolId:
        Ref: FlyOnlineUserPool
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH

  AgentsGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Group all agents
      GroupName: Agents
      RoleArn: !GetAtt AgentsRole.Arn
      UserPoolId: !Ref FlyOnlineUserPool

  AgentsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref FlyOnlineIdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": authenticated

      Policies:
        - PolicyName: FlyOnline-ApiGateway-Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:Invoke
                  - lambda:InvokeFunction
                Resource: "*"

  FlyOnlineIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: FlyOnlinePoolClient
          ProviderName: !GetAtt FlyOnlineUserPool.ProviderName
          ServerSideTokenCheck: true
      IdentityPoolName:
        Ref: identityPoolName

#  FlyOnlineIdentityRoleAtt:
#    Type: AWS::Cognito::IdentityPoolRoleAttachment
#    Properties:
#      IdentityPoolId: !Ref FlyOnlineIdentityPool
#      RoleMappings: '"Fn::GetAtt\": [\"FlyOnlineUserPool\", \"ProviderName\"] : { \"Type\":\"Token\",\"AmbiguousRoleResolution\":\"Deny\"}"'

Outputs:
  FlyOnlineUserPoolAuthorizer:
    Description: Cognito User Pool Arn
    Value: !GetAtt FlyOnlineUserPool.Arn
    Export:
      Name: !Sub ${AWS::StackName}-UserPoolID
  FlyOnlineCognitoIdentityID:
    Description: Cognito Identity Pool ID
    Value: !Ref FlyOnlineIdentityPool
    Export:
      Name: !Sub ${AWS::StackName}-UserIdentityPoolId
